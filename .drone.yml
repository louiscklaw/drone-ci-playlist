# inserted by test hello-appium/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-appium
type: docker

steps:
- name: test
  image: appium/appium
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

# inserted by test hello-appium/.drone.yml end

---

# inserted by test hello-build-stages/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-build-stages
type: docker

steps:

- name: Build
  image: alpine
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

- name: Test
  image: alpine
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

- name: Deploy
  image: alpine
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

# inserted by test hello-build-stages/.drone.yml end

---

# inserted by test hello-failure/.drone.yml start
kind: pipeline
name: hello-failure
type: docker

steps:
- name: hello_failure
  failure: ignore
  image: ubuntu
  commands:
  - ./hello-failure/fail.sh

# inserted by test hello-failure/.drone.yml end

---

# inserted by test hello-gatsby/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-gatsby
type: docker

steps:
- name: helloworld
  image: node:lts
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

  - cd hello-gatsby
  -   yarn
  -   yarn build

# inserted by test hello-gatsby/.drone.yml end

---

# inserted by test hello-gh-pages/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-gh-pages
type: docker

steps:
- name: helloworld
  image: node:lts
  environment:
    GH_TOKEN:
      from_secret: gh_token
  commands:
    - git clone http://louiscklaw:$GH_TOKEN@github.com/louiscklaw/drone-ci-playlist /tmp/drone-ci-playlist

    - cd /tmp/drone-ci-playlist
    - git checkout $DRONE_BRANCH
    -   cd hello-gh-pages
    -     npm install gh-pages -g
    -     gh-pages -d public -b gh-pages

---
kind: secret
name: gh_token
data: A4HTyIEsqndgXqUlbBPlj3tNMBny+0O45/DsakTIwMtf4KiWxSH4UbIQvstyutNcU1q9SLemgjDkxpncaBtl8MGIVzY=

# inserted by test hello-gh-pages/.drone.yml end

---

# inserted by test hello-nodejs/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-nodejs
type: docker

steps:
- name: helloworld
  image: node:lts
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

# inserted by test hello-nodejs/.drone.yml end

---

# inserted by test hello-pipenv/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-pipenv
type: docker

steps:
- name: helloworld
  image: logickee/ubuntu-basic:latest
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH
  - apt-get update
  - apt-get install -y git
  - apt-get install -y python3 python3-pip
  - apt-get install -y entr rsync
  - python3 -m pip install pipenv
  - cd hello-pipenv
  -   pipenv sync
  -   pipenv run python3 main.py
  - cd -

# inserted by test hello-pipenv/.drone.yml end

---

# inserted by test hello-react/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-react
type: docker

steps:
- name: helloworld
  image: node:lts
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH

  - cd hello-react
  -   yarn
  -   yarn test
  -   yarn build

# inserted by test hello-react/.drone.yml end

---

# inserted by test hello-secrets/.drone.yml start

kind: pipeline
name: hello-secrets
steps:
- name: build
  image: ubuntu
  environment:
    HELLO:
      from_secret: hello

  commands:
  - echo $HELLO

---
kind: secret
name: hello
data: fRBBQR1N0FejBRMwbnYCrzDDqKQLvYLcPmKmXSxoUIcv

# inserted by test hello-secrets/.drone.yml end

---

# inserted by test hello-slack/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: hello-slack
type: docker

steps:
- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: webhook


---
kind: secret
name: webhook
data: Bpoft0irrMGM2Kdco5Fc3lnLhO/JkoaZvQMr4qG2N4ZVVn9v2IY5n+wQ31lhup2Ew0rhCfSuz0Y+oO+kI5wOvV1VF48C4r8l3Hd4TNkTGPCoCWwNuAlA+S0t8Nwe+L3y4cRvzJoRNnrdGCk=

# inserted by test hello-slack/.drone.yml end

---

# inserted by test helloworld/.drone.yml start
# https://docs.drone.io/pipeline/environment/reference/

kind: pipeline
name: helloworld
type: docker

steps:
- name: helloworld
  image: alpine
  commands:
  - echo hello
  - echo world
  - echo $DRONE_BRANCH
# inserted by test helloworld/.drone.yml end

---

# inserted by test helloworld-rpi/.drone.yml start
kind: pipeline
name: helloworld-rpi
type: docker

platform:
  os: linux
  arch: arm

steps:
- name: helloworld
  image: alpine
  commands:
  - echo hello
  - echo world

# inserted by test helloworld-rpi/.drone.yml end

---

# inserted by test hello-merger/.drone.yml start
kind: pipeline
name: hello-merger
type: docker

steps:
- name: hello-merger
  image: logickee/ubuntu-basic
  commands:
  - echo $DRONE_BRANCH

  - git clone https://$GITHUB_TOKEN@github.com/louiscklaw/drone-ci-playlist.git /tmp/test_git_dir

  - cd /tmp/test_git_dir
  -   git checkout $DRONE_BRANCH
  - cd -

  - cd hello-merger
  -   pipenv run python3 ./src/main.py /tmp/test_git_dir
  - cd -

  environment:
    GITHUB_TOKEN:
      from_secret: GITHUB_TOKEN

# ERROR_CHECK: linter: invalid or unknown pipeline dependency
# depends_on will update by scripts/build.sh
depends_on:
  - hello-gatsby
  - hello-gh-pages
  - hello-react
  - hello-appium
  - helloworld-rpi
  - hello-pipenv
  - hello-build-stages
  - hello-slack
  - hello-nodejs
  - hello-secrets
  - helloworld
  - hello-failure


trigger:
  status:
  - success
  branch:
  - develop
  - test/*


---
kind: secret
name: GITHUB_TOKEN
data: KahdXW1UO0TePy8Fh5BQ0ghArK0X3JYtDP3aQMCyrt9fX0gYLWv8Qp1p4f4uzXt+mgKWXIQTVuH1RfvX7UwIOxNxWHI=

# inserted by test hello-merger/.drone.yml end